@page "/product"
@inject ILogger<Products> logger;
@inject IProductService _productService;
@inject NavigationManager NavigationManager


<PageTitle>Products</PageTitle>

<ModuleTitle Title="Products"/>
<button class="btn btn-dark mb-2" @onclick="@(()=>NavigationManager.NavigateTo("/addproduct"))">Add Product</button>

@if(products.Count() > 0){
    <div class="products-container">
        @foreach (var product in products)
        {
             <div class="card">
                <img src="@product.Images[0]" alt="Product" loading="lazy" width="270" height="210" class="card-img-top">
                <div class="card-body">
                    <h4>
                        <b>@product.Title</b>
                    </h4>
                    <p>@product.Price?.ToString("C")</p>
                </div>
            </div> 
        }
    </div>
}
else{
    <p>No hay productos para mostrar</p>
}


@code
{
    private List<Product> products = new List<Product>();

protected override async Task OnInitializedAsync()
{
     products = await GetProducts();
}
  
    
    private async Task<List<Product>> GetProducts()
        {
            return await _productService.Get();
        }
}

                    @* <button title="Eliminar" class="btn btn-danger btn-delete" @onclick="(()=> Delete(product))"><span class="oi oi-trash"></span></button> *@
